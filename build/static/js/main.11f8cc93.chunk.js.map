{"version":3,"sources":["components/Weather/Weather.module.scss","components/Form/Form.module.scss","components/Header/Header.module.scss","components/Form/Form.js","components/Header/Header.js","components/Weather/Weather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","sun","rain","drizzle","thunder","snow","clouds","haze","mist","smoke","dust","fog","left","right","outputs","outputTitle","outputCity","outputResult","outputDesc","outputDatas","outputData","fontIcon","forecasts","forecast","nextTemp","header","title","subtitle","logo","Form","props","react_default","a","createElement","onSubmit","getWeather","className","Styles","inputBox","type","name","placeholder","Header","class","options","weekday","month","day","Weather","concat","id","city","country","main","description","temperature","humidity","wind","forecast1","tomorrowIcon","tomorrow","toLocaleString","forecast2","afterTomorrowIcon","afterTomorrow","forecast3","afterAfterTomorrowIcon","afterAfterTomorrow","API_KEY","state","undefined","icon","error","_callee","e","_ref2","_ref3","weather","today","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","Promise","all","axios","get","sent","Object","slicedToArray","console","log","Date","getDay","setDate","getDate","_this","setState","data","temp","sys","speed","list","alert","stop","bgColorClass","this","components_Header_Header","components_Form_Form","components_Weather_Weather","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11f8cc93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Weather_App__1Nuf8\",\"sun\":\"Weather_sun__1q1pO\",\"rain\":\"Weather_rain__Jbl5Z\",\"drizzle\":\"Weather_drizzle__1Nqgj\",\"thunder\":\"Weather_thunder__3Ir-p\",\"snow\":\"Weather_snow__2Qp8H\",\"clouds\":\"Weather_clouds__YHTGH\",\"haze\":\"Weather_haze__1KFw6\",\"mist\":\"Weather_mist__2cwqp\",\"smoke\":\"Weather_smoke__3PmG_\",\"dust\":\"Weather_dust__8GoqL\",\"fog\":\"Weather_fog__3CN-x\",\"left\":\"Weather_left__36vw5\",\"right\":\"Weather_right__2gE0v\",\"outputs\":\"Weather_outputs__3mC0b\",\"outputTitle\":\"Weather_outputTitle__1KDIs\",\"outputCity\":\"Weather_outputCity__2OVq_\",\"outputResult\":\"Weather_outputResult__28QeD\",\"outputDesc\":\"Weather_outputDesc__bgOlf\",\"outputDatas\":\"Weather_outputDatas__2XdjG\",\"outputData\":\"Weather_outputData__2WOY2\",\"fontIcon\":\"Weather_fontIcon__1G0-6\",\"forecasts\":\"Weather_forecasts__2ug_H\",\"forecast\":\"Weather_forecast__1sIP2\",\"nextTemp\":\"Weather_nextTemp__2SDyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Form_App__2ijx3\",\"sun\":\"Form_sun__35nt2\",\"rain\":\"Form_rain__13JaO\",\"drizzle\":\"Form_drizzle__1J5zW\",\"thunder\":\"Form_thunder__1sq8s\",\"snow\":\"Form_snow__3KxF3\",\"clouds\":\"Form_clouds__1sz_M\",\"haze\":\"Form_haze__3yJmw\",\"mist\":\"Form_mist__2rNkd\",\"smoke\":\"Form_smoke__2v4fF\",\"dust\":\"Form_dust__1r7c_\",\"fog\":\"Form_fog__3ajMY\",\"left\":\"Form_left__3meWn\",\"right\":\"Form_right__2aSQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Header_App__aoa5N\",\"sun\":\"Header_sun__2YGpn\",\"rain\":\"Header_rain__2jUex\",\"drizzle\":\"Header_drizzle__5lWQf\",\"thunder\":\"Header_thunder__38gSZ\",\"snow\":\"Header_snow__2yfdH\",\"clouds\":\"Header_clouds__fmP60\",\"haze\":\"Header_haze__2clWU\",\"mist\":\"Header_mist__HWLyE\",\"smoke\":\"Header_smoke__3sq1H\",\"dust\":\"Header_dust__1eQnr\",\"fog\":\"Header_fog__1Lq4-\",\"left\":\"Header_left__3po-7\",\"right\":\"Header_right__1FVyk\",\"header\":\"Header_header__1fIqB\",\"title\":\"Header_title__DPV60\",\"subtitle\":\"Header_subtitle__2Ox0K\",\"logo\":\"Header_logo__3B_pV\"};","import React from 'react'\r\nimport Styles from './Form.module.scss'\r\n\r\nconst Form = (props) => (\r\n            <form onSubmit={props.getWeather}>\r\n                <input className={Styles.inputBox}type=\"text\" name=\"city\" placeholder=\"Enter your city\" />\r\n                <br />\r\n                <button> Get the forecast!</button>\r\n            </form>\r\n        )\r\n\r\nexport default Form ","import React from 'react'\r\n\r\nimport Styles from './Header.module.scss'\r\n\r\nconst Header = () =>  (\r\n            <div className={Styles.header}>\r\n                <h1 className={Styles.title}>WEATHER APP</h1>\r\n                <h2 className={Styles.subtitle}>Find out the weather in your city</h2>\r\n                <div className={Styles.logo}><i class=\"fas fa-temperature-low\"></i></div>\r\n            </div>\r\n        )\r\n\r\nexport default Header","import React from 'react'\r\nimport Styles from \"./Weather.module.scss\"\r\n\r\nlet options = { weekday: 'short', month: 'short', day: 'numeric' };\r\n\r\n\r\nconst Weather = props => (\r\n\r\n            <div className={Styles.outputs}>\r\n\r\n            <div className={Styles.fontIcon}><i className={`owf owf-${props.id}`}></i></div>\r\n\r\n                {props.city && props.country && <h2 className={Styles.outputCity}>{props.city}, {props.country}</h2>}\r\n                {props.main && props.description && <div className={Styles.outputDesc}>{props.main}/{props.description}</div>}\r\n\r\n\r\n                <div className={Styles.outputDatas}>\r\n                    <div className={Styles.outputData}>{props.temperature && <div className={Styles.outputTitle}>Temperature<p className={Styles.outputResult}>{props.temperature}°C</p> </div>}</div>  \r\n\r\n                    <div className={Styles.outputData}>{props.humidity && <div className={Styles.outputTitle}>Humidity<p className={Styles.outputResult}>{props.humidity}%</p></div>}</div>\r\n                    <div className={Styles.outputData}>{props.wind && <div className={Styles.outputTitle}>Wind<p className={Styles.outputResult}>{props.wind} m/s</p></div>}</div>\r\n                </div>\r\n\r\n                <div className={Styles.forecasts}>\r\n                \r\n                    <div className={Styles.forecast}>{props.forecast1 && <div className={Styles.nextTemp}><p><i className={`owf owf-${props.tomorrowIcon}`}></i></p><p>{props.tomorrow.toLocaleString('en-US', options)}</p><p>{props.forecast1} °C</p></div>}</div>\r\n\r\n                    <div className={Styles.forecast}>{props.forecast2 && <div className={Styles.nextTemp}><i className={`owf owf-${props.afterTomorrowIcon}`}></i><p>{props.afterTomorrow.toLocaleString('en-US', options)}</p><p>{props.forecast2} °C</p></div>}</div>\r\n\r\n                    <div className={Styles.forecast}>{props.forecast3 && <div className={Styles.nextTemp}><i className={`owf owf-${props.afterAfterTomorrowIcon}`}></i><p>{props.afterAfterTomorrow.toLocaleString('en-US', options)}</p><p>{props.forecast3} °C</p></div>}</div>\r\n                \r\n                </div>\r\n                \r\n                \r\n            </div>\r\n)\r\nexport default Weather","import React, { Component } from 'react';\nimport axios from 'axios'\nimport './App.scss';\n\nimport Form from './components/Form/Form'\nimport Header from './components/Header/Header'\nimport Weather from './components/Weather/Weather'\n\nconst API_KEY = '61586687420c6c03218d0ae312e69085'\n\n\nclass App extends Component {\n\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    main: undefined,\n    wind: undefined,\n    icon: undefined,\n    error: undefined,\n    id: undefined,\n    forecast1:undefined,\n    forecast2:undefined,\n    forecast3:undefined,\n    tomorrow: undefined,\n    afterTomorrow: undefined,\n    afterAfterTomorrow: undefined,\n    tomorrowIcon:undefined,\n    afterTomorrowIcon: undefined,\n    afterAfterTomorrowIcon:undefined,\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n \n    //const fetchText = url => fetch(url).then(r => r.json()); \n \n    const [weather, forecast] = await Promise.all([\n      axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${API_KEY}`),\n      axios.get(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=${API_KEY}`)\n      \n    ]);\n \n    console.log(weather)\n    console.log(forecast)\n\n\n    let today = new Date()\n    today.getDay()\n\n    let tomorrow = new Date();\n    tomorrow.setDate(today.getDate()+1);\n    tomorrow.getDay()\n\n    let afterTomorrow = new Date();\n    afterTomorrow.setDate(today.getDate()+2);\n    afterTomorrow.getDay()\n\n    let afterAfterTomorrow = new Date();\n    afterAfterTomorrow.setDate(today.getDate()+3);\n    afterAfterTomorrow.getDay()\n\n\n    if (city) {\n      this.setState({\n        temperature: weather.data.main.temp,\n        city: weather.data.name,\n        country: weather.data.sys.country,\n        description: weather.data.weather[0].description,\n        main: weather.data.weather[0].main,\n        humidity: weather.data.main.humidity,\n        wind: weather.data.wind.speed,\n        icon: weather.data.weather[0].icon,\n        id: weather.data.weather[0].id,\n        error: \"\", \n        forecast1: forecast.data.list[0].main.temp, \n        forecast2: forecast.data.list[1].main.temp, \n        forecast3: forecast.data.list[2].main.temp, \n        tomorrow: tomorrow,\n        afterTomorrow: afterTomorrow,\n        afterAfterTomorrow: afterAfterTomorrow,\n        tomorrowIcon: forecast.data.list[0].weather[0].id,\n        afterTomorrowIcon: forecast.data.list[1].weather[0].id,\n        afterAfterTomorrowIcon: forecast.data.list[2].weather[0].id,\n\n\n      })\n    } else {\n      alert(\"Please, enter a city\")\n    }\n  }\n\n\n  render() {\n\n    let bgColorClass = 'App'; \n\n        if (this.state.main === \"Rain\") {\n          bgColorClass = 'rain';\n      }\n      else if (this.state.main === \"Thunderstorm\") {\n          bgColorClass = 'thunder';\n      }\n      else if (this.state.main === \"Drizzle\") {\n          bgColorClass = 'drizzle';\n      }\n      else if (this.state.main === \"Snow\") {\n          bgColorClass = 'snow';\n      }\n      else if (this.state.main === \"Clear\") {\n          bgColorClass = 'sun';\n      }\n      else if (this.state.main === \"Clouds\") {\n        bgColorClass = 'clouds';\n      }\n      else if (this.state.main === \"Mist\") {\n        bgColorClass = 'mist';\n      }\n      else if (this.state.main === \"Smoke\") {\n        bgColorClass = 'smoke';\n      }\n      else if (this.state.main === \"Dust\") {\n        bgColorClass = 'dust'; \n      }\n      else if (this.state.main === \"Fog\") {\n        bgColorClass = 'fog'; \n      }\n      else if (this.state.main === \"Haze\") {\n        bgColorClass = 'haze'; \n      }  \n      else {\n          bgColorClass = 'white'\n      }\n\n    return (\n      <div className={\"App \"+ bgColorClass}>\n        <div className=\"left\">\n          <Header />\n          <Form\n            getWeather={this.getWeather}  />\n        </div>\n        <div className=\"right\">\n          <Weather \n            temperature={this.state.temperature}\n            city={this.state.city}\n            country={this.state.country}\n            description={this.state.description}\n            main={this.state.main}\n            humidity={this.state.humidity}\n            wind={this.state.wind}\n            error={this.state.error}\n            icon={this.state.icon}\n            id={this.state.id}\n            forecast1={this.state.forecast1}\n            forecast2={this.state.forecast2}\n            forecast3={this.state.forecast3}\n            tomorrow={this.state.tomorrow}\n            afterTomorrow={this.state.afterTomorrow}\n            afterAfterTomorrow={this.state.afterAfterTomorrow}\n            tomorrowIcon={this.state.tomorrowIcon}\n            afterTomorrowIcon={this.state.afterTomorrowIcon}\n            afterAfterTomorrowIcon={this.state.afterAfterTomorrowIcon}\n            />  \n        </div>\n        \n    </div>\n    );\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}